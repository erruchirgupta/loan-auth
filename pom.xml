<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ms.loan</groupId>
	<artifactId>loan-auth</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>cardhost-sor</name>
	<description>A Microservice for Loan Details Authorization</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<lombok.version>1.16.10</lombok.version>
		<testng.version>6.14.3</testng.version>
		<flyway.version>5.2.1</flyway.version>
		<dockerfile-maven-version>1.4.4</dockerfile-maven-version>
		<project.dockerfile.tag>${project.version}</project.dockerfile.tag>
		<project.dockerfile.repository>http://www.something.com</project.dockerfile.repository>
		
		<!-- AWS S3 Dependency download extensions -->
		<maven-s3-wagon.version>1.3.0</maven-s3-wagon.version>

	</properties>

	<repositories>
		<repository>
			<id>niyo-s3-maven</id>
			<name>Niyo S3 maven Repository</name>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>s3://maven.goniyo.com/</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Finchley.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		
		<!-- Mysql Connection Dependency -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- <dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway.version}</version>
		</dependency> -->
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
		</dependency>
		<!--spring-retry Starts-->
       <dependency>
         <groupId>org.springframework.retry</groupId>
         <artifactId>spring-retry</artifactId>
        </dependency>
		<!--spring-retry End-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
				
		<dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>3.0.11</version><!--$NO-MVN-MAN-VER$-->
        </dependency>
		
		 <!-- Start of gelf udp appender -->
       <dependency>
           <groupId>me.moocar</groupId>
           <artifactId>logback-gelf</artifactId>
           <version>0.3</version>
      </dependency>
     <!-- End of it -->
     <!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20180813</version>
		</dependency>
		<!--GSON Maven Start -->
			<dependency>
   				 <groupId>com.google.code.gson</groupId>
    			<artifactId>gson</artifactId>
   			 </dependency>
		   
		<!--  Starts -->
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		 	</dependency>
		     
        <dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>		
		     
        <dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>retrofit</artifactId>
		 	<version>2.3.0</version>
		</dependency>
		     
        <dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>converter-jackson</artifactId>
		 	<version>2.3.0</version>
		</dependency>
		     
        <dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>converter-simplexml</artifactId>
		 	<version>2.3.0</version>
		</dependency>
		     
        <dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
		 	<version>4.2.0</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		     
        <dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>logging-interceptor</artifactId>
		 	<version>4.2.0</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		     
        <dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
		 	<version>1.8.3</version>
		</dependency>

		<dependency>
		    <groupId>org.springframework.kafka</groupId>
		    <artifactId>spring-kafka</artifactId>
		    <version>2.2.7.RELEASE</version>
		</dependency>
		     
	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>com.github.seahen</groupId>
				<artifactId>maven-s3-wagon</artifactId>
				<version>${maven-s3-wagon.version}</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- tag::plugin[] -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-version}</version>
				<!-- <executions> <execution> <id>default</id> <goals> <goal>build</goal> 
					<goal>push</goal> </goals> </execution> </executions> -->
				<configuration>
					<tag>${project.dockerfile.tag}</tag>
					<repository>${project.dockerfile.repository}</repository>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
					<forceTags>true</forceTags>
				</configuration>
			</plugin>
		</plugins>
	</build>

<!-- <build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			tag::plugin[]
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-version}</version>
				<executions> <execution> <id>default</id> <goals> <goal>build</goal> 
					<goal>push</goal> </goals> </execution> </executions>
				<configuration>
					 <tag>${project.dockerfile.tag}</tag>
					<repository>389904390004.dkr.ecr.ap-south-1.amazonaws.com/api/microservice/cardhost-reconciler</repository>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
					<forceTags>true</forceTags>
				</configuration>
			</plugin>
		</plugins>
	</build> -->

	
</project>
